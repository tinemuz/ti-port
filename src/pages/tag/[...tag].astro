---
import MainLayout from "../../layouts/main-layout.astro";

import { getCollection, type CollectionEntry } from "astro:content";
import WritingGrid from "../../components/WritingGrid.astro";

const { tag } = Astro.props;

export async function getAllTags() {
  const collection = await getCollection("writing");
  const allTags = new Set<string>();

  collection.forEach((item: { data: { tags: any[] } }) => {
    item.data.tags?.forEach((tag) => allTags.add(tag));
  });

  return Array.from(allTags);
}

// Generate static paths for tags
export async function getStaticPaths() {
  const tags = await getAllTags();
  return tags.map((tag) => ({
    params: { tag },
    props: { tag },
  }));
}

const allWriting: CollectionEntry<"writing">[] = (
  await getCollection("writing")
).sort(
  (a: CollectionEntry<"writing">, b: CollectionEntry<"writing">) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const tagWriting = allWriting.filter((writing) =>
  writing.data.tags.includes(tag)
);
---

<MainLayout title={`# ${tag}`}>
  <div class="flex flex-col text-skin-text">
    <div class="flex flex-grow flex-col items-center justify-center">
      <div
        class="w-full pt-6 sm:max-w-[812px]"
      >
        <h1 class="pb-8"># {tag}</h1>
      </div>
      <div class="w-full flex-grow sm:max-w-[812px]">
        {tagWriting.map((writing) => <WritingGrid writing={writing} />)}
      </div>
    </div>
  </div>
</MainLayout>
