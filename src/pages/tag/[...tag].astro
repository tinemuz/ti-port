---
import MainLayout from "../../layouts/main-layout.astro";

import { getCollection, type CollectionEntry } from "astro:content";
import Writing from "../writing.astro";
import { formatDate } from "../../util/utils";
import Tags from "../../components/Tags.astro";

const { tag } = Astro.props;

export async function getAllTags() {
  const collection = await getCollection("writing");
  const allTags = new Set<string>();

  collection.forEach((item) => {
    item.data.tags?.forEach((tag) => allTags.add(tag));
  });

  return Array.from(allTags);
}

// Generate static paths for tags
export async function getStaticPaths() {
  const tags = await getAllTags();
  return tags.map((tag) => ({
    params: { tag },
    props: { tag },
  }));
}

const allWriting: CollectionEntry<"writing">[] = (
  await getCollection("writing")
).sort(
  (a: CollectionEntry<"writing">, b: CollectionEntry<"writing">) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const tagWriting = allWriting.filter((writing) =>
  writing.data.tags.includes(tag)
);
---

<MainLayout title="#" {tag}>
  <div class="flex flex-col text-mtext">
    <div class="flex flex-grow flex-col items-center justify-center">
      <div class="w-full border-b border-b-mgray pt-6 md:max-w-[812px]">
        <h2 class="pb-4 text-lg font-bold"># {tag}</h2>
      </div>
      <div class="pt-8"></div>
      <div class="w-full flex-grow md:max-w-[812px]">
        {
          tagWriting.map((writing) => (
            <div class="grid grid-cols-[25%,70%] justify-between pb-7">
              <div>
                <p>{formatDate(writing.data.pubDate)}</p>
              </div>
              <div>
                <a href={"/writing/" + writing.slug}>
                  {writing.data.title} - {writing.data.description}
                </a>
                <Tags tags={writing.data.tags} />
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</MainLayout>
