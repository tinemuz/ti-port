<button
  id='theme-toggle'
  type='button'
  class="size-5 cursor-pointer rounded-full bg-skin-accent transition-all duration-300 ease-in-out hover:scale-110"
></button>

<script is:inline>
  const STORAGE_THEME_KEY = 'theme';
  const DARK_THEME_CLASS = 'theme-dark';
  const LIGHT_THEME_CLASS = 'theme-base';
  const root = document.documentElement;

  const getUserPreference = () => {
    const storedTheme = localStorage.getItem(STORAGE_THEME_KEY);
    if (storedTheme) return storedTheme;
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? DARK_THEME_CLASS : LIGHT_THEME_CLASS;
  };

  const applyTheme = (theme) => {
    root.classList.toggle(DARK_THEME_CLASS, theme === DARK_THEME_CLASS);
    root.classList.toggle(LIGHT_THEME_CLASS, theme === LIGHT_THEME_CLASS);
    localStorage.setItem(STORAGE_THEME_KEY, theme);
  };

  const initTheme = () => applyTheme(getUserPreference());

  const toggleTheme = () => {
    const newTheme = root.classList.contains(DARK_THEME_CLASS) ? LIGHT_THEME_CLASS : DARK_THEME_CLASS;
    applyTheme(newTheme);
  };

  const setButtonHandler = () => {
    const button = document.getElementById('theme-toggle');
    button?.addEventListener('click', toggleTheme);
  };

  // Ensure the DOM is fully loaded before attaching the event listener
  document.addEventListener('DOMContentLoaded', () => {
    initTheme();
    setButtonHandler();
  });

  // Re-apply theme and set button on navigation with View Transitions
  document.addEventListener('astro:after-swap', () => {
    initTheme();
    setButtonHandler();
  });
</script>
