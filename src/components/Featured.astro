---
import { type CollectionEntry, getCollection } from "astro:content";
import { Image } from "astro:assets";

const allWriting: CollectionEntry<"writing">[] = (
  await getCollection("writing")
).sort(
  (a: CollectionEntry<"writing">, b: CollectionEntry<"writing">) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const tagWriting = allWriting.filter((writing) =>
  writing.data.tags.includes("featured")
);
---

<div class="">
  <div class="w-full flex-grow md:max-w-[812px]">
    {
      tagWriting.map((writing) => (
        <div class="grid grid-cols-3 border border-mgray">
          <div class="border-r border-mgray">
            <div class="h-5 border-b border-mgray" />
            <div class="aspect-square ">
              <a href={"/writing/" + writing.slug}>
                <Image
                  src={writing.data.images[0].path}
                  alt={writing.data.images[0].alt}
                />
              </a>
            </div>
          </div>
          <div class="border-r border-mgray">
            <div class="h-5 border-b border-mgray" />
            <div class="aspect-square ">
              <a href={"/writing/" + writing.slug}>
                <Image
                  src={writing.data.images[0].path}
                  alt={writing.data.images[0].alt}
                />
              </a>
            </div>
          </div>
          <div class="border-r border-mgray">
            <div class="h-5 border-b border-mgray" />
            <div class="aspect-square ">
              <a href={"/writing/" + writing.slug}>
                <Image
                  src={writing.data.images[0].path}
                  alt={writing.data.images[0].alt}
                />
              </a>
            </div>
          </div>
        </div>
      ))
    }
  </div>
</div>
